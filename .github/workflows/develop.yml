name: AKS-Deployment
on:
  push:
      branches:
        - 'develop'

env:
  RESOURCE_GROUP_NAME: 'DTGS-U1-CV1-RG-03'
  CLUSTER_NAME: 'DTGS-U1-CV1-AKS-01'
  NAMESPACE: 'sit'
  IMAGE_RESOURCE_URL: ${{ secrets.ACR_URL }}/sit/aop-be-app-cv1:${{ github.sha }}

permissions:
  id-token: write
  contents: read
  actions: read

jobs:
  AKS-Deployment:
    environment: sit
    runs-on: ubuntu-latest
    steps:
      - name: Git Checkout
        uses: actions/checkout@v2

      - name: Update repo image url in manifest
        id: replace_image_param
        uses: mikefarah/yq@master
        with:
          cmd: |
            yq e -i '.spec.template.spec.containers.[0].image = "${{ env.IMAGE_RESOURCE_URL }}"' 'azure-deployment.yaml'

      - name: Docker build & Push to ACR
        uses: azure/docker-login@v1
        with:
          login-server: ${{ secrets.ACR_URL }}
          username: ${{ secrets.ACR_USERNAME }}
          password: ${{ secrets.ACR_PASSWORD }}
      - run: |
            docker build --no-cache . -t ${{ env.IMAGE_RESOURCE_URL }}
            docker push ${{ env.IMAGE_RESOURCE_URL }}

      - name: OIDC Login to Azure Public Cloud
        uses: azure/login@v1
        with:
          client-id: ${{ secrets.AZURE_CLIENT_ID }}
          tenant-id: ${{ secrets.AZURE_TENANT_ID }}
          subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}

      - name: Set target resource group and cluster
        uses: azure/aks-set-context@v3
        with:
          resource-group: ${{ env.RESOURCE_GROUP_NAME }}
          cluster-name: ${{ env.CLUSTER_NAME }}

      - name: Install kubectl
        uses: azure/setup-kubectl@v3

      - name: Create k8s secret
        uses: Azure/k8s-create-secret@v1.1
        with:
          container-registry-url: ${{ secrets.ACR_URL }}
          container-registry-username: ${{ secrets.ACR_USERNAME }}
          container-registry-password: ${{ secrets.ACR_PASSWORD }}
          secret-name: k8s-secret

      - name: Deploy to AKS
        uses: Azure/k8s-deploy@v4
        with:
          namespace: ${{ env.NAMESPACE }}
          action: deploy
          images: |
            '${{ env.IMAGE_RESOURCE_URL }}'
          manifests: |
            azure-deployment.yaml
            azure-loadbalancer.yaml
          imagepullsecrets: |
            k8s-secret