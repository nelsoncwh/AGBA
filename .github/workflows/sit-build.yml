name: buid-source
on:
  push:
      branches:
        - 'develop'

env:
  RESOURCE_GROUP_NAME: 'DTGS-U1-CV1-RG-03'
  CLUSTER_NAME: 'DTGS-U1-CV1-AKS-01'
  NAMESPACE: 'sit'
  IMAGE_RESOURCE_URL: ${{ secrets.ACR_URL }}/sit/aop-be-app-cv1:${{ github.sha }}

permissions:
  id-token: write
  contents: read
  actions: read

jobs:
  buid-source:
    environment: sit
    env:
      MVN_BUILD_PROFILE: sit
    runs-on: ubuntu-latest
    steps:
      - name: Git Checkout
        uses: actions/checkout@v3

      - name: Set up Open JDK 17
        uses: actions/setup-java@v3
        with:
          distribution: 'corretto'
          java-version: '17'
          cache: 'maven'
          
      - name: Build and Test with Maven
        run: mvn clean package -Dmaven.test.skip=true -Psit -f pom.xml
        env:
          GITHUB_TOKEN: ${{ secrets.PUBLISH_GITHUB_TOKEN }}
          
      - name: Setup environment variables
        id: vars
        run: |
          echo "::set-output name=aks-resource-group::DTGS-U1-CV1-RG-03"
          echo "::set-output name=aks-cluster-name::DTGS-U1-CV1-AKS-01"
          echo "::set-output name=aks-image-url::$IMAGE_RESOURCE_URL"
          
      - name: Docker build & Push to ACR
        uses: azure/docker-login@v1
        with:
          login-server: ${{ secrets.ACR_URL }}
          username: ${{ secrets.ACR_USERNAME }}
          password: ${{ secrets.ACR_PASSWORD }}
      - run: |
            docker build --no-cache . -t ${{ env.IMAGE_RESOURCE_URL }}
            docker push ${{ env.IMAGE_RESOURCE_URL }}
            
  call-workflow-deploy-aks:
    needs: buid-source
    name: Deploy
    uses: ./.github/workflows/deploy-aks.yml
    with:
      environment: sit
      app-name: aop-be-app-cv1
      repository: aop-be-app-cv1
      cluster_name: DTGS-U1-CV1-AKS-01
      resource_group_name: DTGS-U1-CV1-RG-03
      namespace: sit
    secrets: inherit
