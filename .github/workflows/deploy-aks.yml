name: AKS Deploy

on:
  workflow_call:
    inputs:
      environment:
        type: string
        default: sit
      app-name:
        required: true
        type: string
        default: ${{ github.event.repository.name }}
      repository:
        required: true
        type: string
        default: ${{ github.event.repository.name }}
      resource_group_name:
        required: true
        type: string
      cluster_name:
        required: true
        type: string
      namespace: 
        required: true
        type: string
  
permissions:
  id-token: write
  contents: read
  actions: read

jobs:
  deploy-aks:
    name: Deploy to AKS
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      
      - name: Install kubectl
        uses: azure/setup-kubectl@v3
          
      - name: OIDC Login to Azure Public Cloud
        uses: azure/login@v1
        with:
          client-id: ${{ secrets.AZURE_CLIENT_ID }}
          tenant-id: ${{ secrets.AZURE_TENANT_ID }}
          subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
          enable-AzPSSession: true

      - name: Set target resource group and cluster
        uses: azure/aks-set-context@v3
        with:
          resource-group: ${{ inputs.resource_group_name }}
          cluster-name: ${{ inputs.cluster_name }}
        
      - name: Replace tokens
        uses: cschleiden/replace-tokens@v1.1
        with:
          files: '["azure-deployment.yaml"]'
          tokenPrefix: '__'
          tokenSuffix: '__'
        env:
          APP_REPO: ${{ secrets.ACR_URL }}/${{ inputs.environment }}/${{ inputs.app-name }}:${{ github.sha }}

      - name: Create k8s secret
        uses: Azure/k8s-create-secret@v1.1
        with:
          container-registry-url: ${{ secrets.ACR_URL }}
          container-registry-username: ${{ secrets.ACR_USERNAME }}
          container-registry-password: ${{ secrets.ACR_PASSWORD }}
          secret-name: k8s-secret

      - name: Deploy to AKS
        uses: Azure/k8s-deploy@v4
        with:
          namespace: ${{ inputs.namespace }}
          action: deploy
          images: |
            ${{ secrets.ACR_URL }}/${{ inputs.environment }}/${{ inputs.app-name }}:${{ github.sha }}
          manifests: |
            azure-deployment.yaml
            azure-loadbalancer.yaml
          imagepullsecrets: |
            k8s-secret
